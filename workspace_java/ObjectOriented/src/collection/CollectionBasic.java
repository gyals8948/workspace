package collection;

public class CollectionBasic {
}
/*
* Collection Fmwork (앞글자 대문자 사용)
* 다수의 데이터를 관리하기 위해 java에서 제공하는 기능을 사용.
*
* collection : 데이터 모음집( 배열의 상위호환 느낌)
*
* 컬렉션 프레임워크에는 기본 자료형 저장 불가(못 들어감) -> Wrap을 쓰면 될지도
*
*
* 제공되는 ★ interface ★ (자료구조에 따라 데이터의 저장 형태가 달라지기 때문에 4가지 방법을 제공)
*
* List(사용률 80%), Set(안씀), Queue(얘도 안씀), Map(20%)
* =======================================================
* List에 저장되는 데이터의 특징(배열과 비슷)
* - 데이터의 순번이 존재
* - 데이터의 중복이 가능
*
* Set에 저장되는 데이터의 특징(List의 반대되는 특징)
* - 데이터의 순번이 존재하지 않음
* - 데이터 중복 불가능
* - for문 사용불가(순번이 존재하기 때문에)
*
* stack (자료구조) - 면접에서 가끔 나옴(?) / 깊은 웅덩이 같은 모양(?)
* -쌓아간다(스택 쌓듯이)
* - 1,2,3 처럼 순서로 쌓고 3,2,1 로 역순으로 나옴 (탑 쌓기 게임처럼)
* - 마지막으로 들어간게 처음으로 나온다(L.I.F.O)
*
* Queue (긴 배관 같은 느낌)
* - 들어간 순서에 맞춰서 빠져나옴(F.I.F.O)
*
* ======================================
* ※ List interface를 구현한 ★class★
*
* - ArrayList (list interface를 구현) |문법(?) list<자료형> 변수명 = new ArrayList<>();
*
* - LinkedList
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
* */
