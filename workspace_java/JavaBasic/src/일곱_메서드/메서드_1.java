package 일곱_메서드;

public class 메서드_1 {

    //메서드(Method) == 함수(Function)
    //메서드는 반복해서 실행하는 코드를 미리 하나의 기능으로 정의, 기능상자
    //메서드의 사용은 크게 메서드 정의 부분과 메서드 호출 부분으로 나뉨
    //메서드를 사용 하려면 반드시 메서드 정의 후 '호출'을 해야 함
    //메서드의 정의는 클래스 안 + 다른 메서드 밖에서 선언한다.
    //메서드는 필요한 만큼 무한정 정의할 수 있음
    //메서드명은 중복 불가능 (대소문자를 구분함)
    //메서드명은 항상 소문자로 명명한다.

    //메서드의 호출은 (main)메서드의 정의 안에서 호출
    //메서드를 호출할 때는 정의한 메서드명을 반드시 일치시켜야함.(대소문자를 맞춰야 인식)
    //메서드를 호출할 때는 정의한 메서드의 매개변수 정보를 일치시켜야 함. 소문자();
    //매개변수 정보 : 매개변수의 자료형, 매개변수의 갯수
    //매개변수(parameter)  : 매서드 정의 부분 소괄호 안에서 정의된 변수를 매개변수라고 함.
    //매개변수의 역할 : 메서드의 기능을 구현할 때 필요한 데이터를 외부로부터 받아오는 것.


    //리턴타입 : 메서드의 실행 결과 값을 외부로 전달할 때 사용.
    //리턴타입은 메서드의 실행 결과, 외부로 전달될 데이터 타입과 일치시켜야 함
    //실행결과 리턴할 데이터가 없을 때는 리턴타입에 void를 사용.
    //메서드의 실행결과 '리턴 데이터가 있다면' 메서드 내부에서 'return' 키워드를 사용한다.
    //★ 'return' 키워드는 항상 메서드의 '마지막 줄'에 딱 한번만 실행(작성은 여러번 가능) 가능
    //


    //메서드의 정의 문법
    /*
    * 접근제한자(public) 리턴타입(void) 메서드명(매개변수정보){
    *
    *
    * {
    *
    *   public static void 메서드명(){
    * }
    *
    * */

    // 메서드 명은 마음대로 변경해도o 다만, main은 고정

        //메서드의 정의
    public static void hello(){
        System.out.println("hello~");
    }

    public static void main(String[] args) {

        // ★메서드의 호출
        hello();

    }


}
